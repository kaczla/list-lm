[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["E", "F", "W", "I", "N", "YTT", "ANN", "S", "BLE", "B", "A", "EXE", "INP", "PIE", "T20", "PT", "Q", "SIM", "ARG", "PTH", "PGH", "RUF"]
ignore = ["ANN101", "ANN401", "S101", "SIM118", "RUF005", "RUF010"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D101", "D102", "D103", "D106", "S105", "S106"]

[tool.ruff.lint.pep8-naming]
classmethod-decorators = ["classmethod", "classproperty", "pydantic.validator", "pydantic.root_validator"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pycodestyle]
max-doc-length = 120

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.black]
line-length = 120
skip-string-normalization = false

[tool.isort]
atomic = true
profile = "black"
line_length = 120
multi_line_output = 3

[tool.mypy]
platform = "linux"
ignore_missing_imports = true
show_column_numbers = true
show_error_context = false
show_error_codes = true
follow_imports = "normal"
warn_return_any = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_ignores = true
warn_unused_configs = true
# More type restrictions:
no_implicit_optional = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
